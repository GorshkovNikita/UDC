#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.19448
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UDC.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBLibUDC_21_01")]
	public partial class CurrentIndexDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertCurrentIndex(CurrentIndex instance);
    partial void UpdateCurrentIndex(CurrentIndex instance);
    partial void DeleteCurrentIndex(CurrentIndex instance);
    #endregion
		
		public CurrentIndexDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DBLibUDC_21_01ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CurrentIndexDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CurrentIndexDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CurrentIndexDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CurrentIndexDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CurrentIndex> CurrentIndex
		{
			get
			{
				return this.GetTable<CurrentIndex>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrentIndex")]
	public partial class CurrentIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _id;
		
		private string _MainTableID;
		
		private string _LanguageID;
		
		private string _FormID;
		
		private string _TimeID;
		
		private string _PlaceID;
		
		private string _NationID;
		
		private string _PropertyID;
		
		private string _SignBetween;
		
		private string _FirstBracket;
		
		private string _SecondBracket;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(byte value);
    partial void OnidChanged();
    partial void OnMainTableIDChanging(string value);
    partial void OnMainTableIDChanged();
    partial void OnLanguageIDChanging(string value);
    partial void OnLanguageIDChanged();
    partial void OnFormIDChanging(string value);
    partial void OnFormIDChanged();
    partial void OnTimeIDChanging(string value);
    partial void OnTimeIDChanged();
    partial void OnPlaceIDChanging(string value);
    partial void OnPlaceIDChanged();
    partial void OnNationIDChanging(string value);
    partial void OnNationIDChanged();
    partial void OnPropertyIDChanging(string value);
    partial void OnPropertyIDChanged();
    partial void OnSignBetweenChanging(string value);
    partial void OnSignBetweenChanged();
    partial void OnFirstBracketChanging(string value);
    partial void OnFirstBracketChanged();
    partial void OnSecondBracketChanging(string value);
    partial void OnSecondBracketChanged();
    #endregion
		
		public CurrentIndex()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainTableID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MainTableID
		{
			get
			{
				return this._MainTableID;
			}
			set
			{
				if ((this._MainTableID != value))
				{
					this.OnMainTableIDChanging(value);
					this.SendPropertyChanging();
					this._MainTableID = value;
					this.SendPropertyChanged("MainTableID");
					this.OnMainTableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					this.OnFormIDChanging(value);
					this.SendPropertyChanging();
					this._FormID = value;
					this.SendPropertyChanged("FormID");
					this.OnFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TimeID
		{
			get
			{
				return this._TimeID;
			}
			set
			{
				if ((this._TimeID != value))
				{
					this.OnTimeIDChanging(value);
					this.SendPropertyChanging();
					this._TimeID = value;
					this.SendPropertyChanged("TimeID");
					this.OnTimeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PlaceID
		{
			get
			{
				return this._PlaceID;
			}
			set
			{
				if ((this._PlaceID != value))
				{
					this.OnPlaceIDChanging(value);
					this.SendPropertyChanging();
					this._PlaceID = value;
					this.SendPropertyChanged("PlaceID");
					this.OnPlaceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NationID
		{
			get
			{
				return this._NationID;
			}
			set
			{
				if ((this._NationID != value))
				{
					this.OnNationIDChanging(value);
					this.SendPropertyChanging();
					this._NationID = value;
					this.SendPropertyChanged("NationID");
					this.OnNationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyID
		{
			get
			{
				return this._PropertyID;
			}
			set
			{
				if ((this._PropertyID != value))
				{
					this.OnPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyID = value;
					this.SendPropertyChanged("PropertyID");
					this.OnPropertyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignBetween", DbType="NVarChar(5)")]
		public string SignBetween
		{
			get
			{
				return this._SignBetween;
			}
			set
			{
				if ((this._SignBetween != value))
				{
					this.OnSignBetweenChanging(value);
					this.SendPropertyChanging();
					this._SignBetween = value;
					this.SendPropertyChanged("SignBetween");
					this.OnSignBetweenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstBracket", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string FirstBracket
		{
			get
			{
				return this._FirstBracket;
			}
			set
			{
				if ((this._FirstBracket != value))
				{
					this.OnFirstBracketChanging(value);
					this.SendPropertyChanging();
					this._FirstBracket = value;
					this.SendPropertyChanged("FirstBracket");
					this.OnFirstBracketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondBracket", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string SecondBracket
		{
			get
			{
				return this._SecondBracket;
			}
			set
			{
				if ((this._SecondBracket != value))
				{
					this.OnSecondBracketChanging(value);
					this.SendPropertyChanging();
					this._SecondBracket = value;
					this.SendPropertyChanged("SecondBracket");
					this.OnSecondBracketChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
